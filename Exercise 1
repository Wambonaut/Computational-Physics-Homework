#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Apr 26 17:58:07 2019

@author: wambo
"""
import numpy as np
import matplotlib.pyplot as plt
#####IntroCompPhys Exercise 1

###3

a=5.0
n0=100.0
n1=30.0
y0=100

def get_y_n(y_last, n1, n, a):
    print("Value %f: %f"%(n, y_last))
    if n<n1:
        y_n=1/(n+1)-a*y_last
        return get_y_n(y_n, n1, n+1, a)
    elif n>n1:
        y_n=(1/n-y_last)/a
        return get_y_n(y_n, n1, n-1, a)
    elif n==n1:
        return y_last

##print(get_y_n(y0, n1, n0, a))

###4
G=1
M=1
h=0.001
steps=100000
class Body:
    def __init__(self, pos, vel, mass):
        self.pos=pos
        self.vel=vel
        self.mass=mass
        self.trail=[]
    def euler_step(self, h, other):
        vel=self.vel+h*G*(self.mass+other.mass)/np.linalg.norm(self.pos-other.pos)**3*(other.pos-self.pos)##calculate vi+1(xi,vi)
        pos=self.pos+h*self.vel##calculate xi+1(xi,vi)
        self.vel=vel
        self.pos=pos
        self.trail.append(self.pos)
    def leapfrog_position_step(self, h, other):
        self.pos=self.pos+h*self.vel##calculate xi+1(x(i),v(i+1/2) Step 1
        self.trail.append(self.pos)
    def leapfrog_velocity_step(self,h,other):
        self.vel=self.vel+h*G*(self.mass+other.mass)/np.linalg.norm(self.pos-other.pos)**3*(other.pos-self.pos)##calculate vi+3/2(vi+1/2,xi+1) Step 2
    def cleartrail(self):
        self.trail=[]
b1=Body(np.array([0,2]),np.array([0.3,0]),M)
b2=Body(np.array([0,-2]),np.array([-0.3,0]),M)
i=0
##euler
while i<steps:
    b1.euler_step(h, b2)
    b2.euler_step(h, b1)
    i+=1
plt.plot(np.array(b1.trail)[:,0], np.array(b1.trail)[:,1])
plt.plot(np.array(b2.trail)[:,0], np.array(b2.trail)[:,1])
plt.title("Euler integration with h=%.5f and %i steps"%(h, steps))
plt.show()
b1=Body(np.array([0,2]),np.array([0.3,0]),M)
b2=Body(np.array([0,-2]),np.array([-0.3,0]),M)

##leapfrog
i=0
while i<steps:
    b1.leapfrog_position_step(h, b2)
    b2.leapfrog_position_step(h, b1)
    b1.leapfrog_velocity_step(h, b2)
    b2.leapfrog_velocity_step(h, b1)
    i+=1
plt.plot(np.array(b1.trail)[:,0], np.array(b1.trail)[:,1])
plt.plot(np.array(b2.trail)[:,0], np.array(b2.trail)[:,1])
plt.title("Leapfrog integration with h=%.5f and %i steps"%(h, steps))
plt.show()